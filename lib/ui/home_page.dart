import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:flutter/services.dart';import 'package:flutter_bloc/flutter_bloc.dart';import '../../../utils/currency_item.dart';import '../../../utils/lang_data.dart';import 'bloc/home_bloc.dart';class HomePage extends StatefulWidget {  const HomePage({super.key});  @override  State<HomePage> createState() => _HomePageState();}class _HomePageState extends State<HomePage> {  final HomeBloc _bloc = HomeBloc();  final TextEditingController _controllerUz = TextEditingController();  final TextEditingController _controllerOther = TextEditingController();  String _currentDate = DateTime.now().toLocal().toString().split(' ')[0];  bool changeCurrency = false;  final ValueNotifier<List<LangData>> _langList = ValueNotifier([    LangData('uz', true),    LangData('ru', false),    LangData('en', false),    LangData('uzc', false)  ]);  String selectedLang = 'uz';  @override  void initState() {    _controllerOther.text = '1';    SystemChrome.setSystemUIOverlayStyle(const SystemUiOverlayStyle(      statusBarColor: Color(0xFF4D2B89),    ));    super.initState();  }  @override  Widget build(BuildContext context) {    return BlocProvider(      create: (_) =>          _bloc..add(GetAllCurrenciesEvent(selectedLang, _currentDate)),      child: Scaffold(        body: SafeArea(          child: Stack(            children: [              Container(                height: 56,                decoration: const BoxDecoration(                    color: Color(0xFF673BB7),                    borderRadius: BorderRadius.only(                        bottomRight: Radius.circular(12),                        bottomLeft: Radius.circular(12))),                child: Row(                  children: [                    const SizedBox(width: 15),                    Text(                      selectedLang == 'uz'                          ? 'Valyuta'                          : selectedLang == 'ru'                              ? 'Валюта'                              : selectedLang == 'en'                                  ? 'Currency'                                  : 'Валюта',                      style: const TextStyle(                          fontWeight: FontWeight.w500,                          fontSize: 18,                          color: Colors.white),                    ),                    const Spacer(),                    InkWell(                        onTap: () {                          setState(() {                            _selectDate();                          });                          print(_currentDate);                        },                        child: const Icon(                          Icons.calendar_month_outlined,                          color: Colors.white,                        )),                    const SizedBox(width: 10),                    InkWell(                      onTap: () {                        setState(() {                          showModalBottomSheet(                              isScrollControlled: true,                              context: context,                              builder: (context) {                                return Padding(                                  padding: EdgeInsets.only(                                      bottom: MediaQuery.of(context)                                          .viewInsets                                          .bottom),                                  child: SizedBox(                                    height: 270,                                    width: MediaQuery.of(context).size.width,                                    child: Column(                                      children: [                                        const SizedBox(height: 10),                                        Container(                                          height: 8,                                          width: 40,                                          decoration: const BoxDecoration(                                              color: Colors.grey,                                              borderRadius: BorderRadius.all(                                                  Radius.circular(20))),                                        ),                                        Row(                                          children: [                                            ValueListenableBuilder<List<LangData>>(                                              valueListenable: _langList,                                              builder: (BuildContext context,                                                  List<LangData> value,                                                  Widget? child) {                                                return Checkbox(                                                  shape: const CircleBorder(),                                                  value: _langList                                                      .value[0].isSelected,                                                  onChanged: (bool? value) {                                                    setState(() {                                                      for (var e                                                          in _langList.value) {                                                        e.isSelected = false;                                                      }                                                      _langList.value[0]                                                          .isSelected = true;                                                      value = true;                                                      selectedLang = _langList                                                          .value[0].language;                                                      Navigator.pop(context);                                                    });                                                  },                                                );                                              },                                            ),                                            const SizedBox(                                              width: 10,                                            ),                                            Text(_langList.value[0].language)                                          ],                                        ),                                        const Divider(),                                        Row(                                          children: [                                            ValueListenableBuilder<                                                List<LangData>>(                                              valueListenable: _langList,                                              builder: (BuildContext context,                                                  List<LangData> value,                                                  Widget? child) {                                                return Checkbox(                                                  shape: const CircleBorder(),                                                  value: _langList                                                      .value[1].isSelected,                                                  onChanged: (bool? value) {                                                    setState(() {                                                      for (var e                                                          in _langList.value) {                                                        e.isSelected = false;                                                      }                                                      _langList.value[1]                                                          .isSelected = true;                                                      selectedLang = _langList                                                          .value[1].language;                                                      value = true;                                                      Navigator.pop(context);                                                    });                                                  },                                                );                                              },                                            ),                                            const SizedBox(                                              width: 10,                                            ),                                            Text(_langList.value[1].language)                                          ],                                        ),                                        const Divider(),                                        Row(                                          children: [                                            ValueListenableBuilder<                                                List<LangData>>(                                              valueListenable: _langList,                                              builder: (BuildContext context,                                                  List<LangData> value,                                                  Widget? child) {                                                return Checkbox(                                                  shape: const CircleBorder(),                                                  value: _langList                                                      .value[2].isSelected,                                                  onChanged: (bool? value) {                                                    setState(() {                                                      for (var e                                                          in _langList.value) {                                                        e.isSelected = false;                                                      }                                                      _langList.value[2]                                                          .isSelected = true;                                                      selectedLang = _langList                                                          .value[2].language;                                                      value = true;                                                      Navigator.pop(context);                                                    });                                                  },                                                );                                              },                                            ),                                            const SizedBox(                                              width: 10,                                            ),                                            Text(_langList.value[2].language)                                          ],                                        ),                                        const Divider(),                                        Row(                                          children: [                                            ValueListenableBuilder<                                                List<LangData>>(                                              valueListenable: _langList,                                              builder: (BuildContext context,                                                  List<LangData> value,                                                  Widget? child) {                                                return Checkbox(                                                  shape: const CircleBorder(),                                                  value: _langList                                                      .value[3].isSelected,                                                  onChanged: (bool? value) {                                                    setState(() {                                                      for (var e                                                          in _langList.value) {                                                        e.isSelected = false;                                                      }                                                      _langList.value[3]                                                              .isSelected =                                                          true ?? false;                                                      selectedLang = _langList                                                          .value[3].language;                                                      value = true;                                                      Navigator.pop(context);                                                    });                                                  },                                                );                                              },                                            ),                                            const SizedBox(                                              width: 10,                                            ),                                            Text(_langList.value[3].language)                                          ],                                        ),                                      ],                                    ),                                  ),                                );                              });                        });                      },                      child: const Icon(                        Icons.language,                        color: Colors.white,                      ),                    ),                    const SizedBox(width: 15)                  ],                ),              ),              BlocConsumer<HomeBloc, HomeState>(                listener: (context, state) {},                builder: (context, state) {                  if (state is LoadingState) {                    return const Center(child: CupertinoActivityIndicator());                  } else if (state is GetAllCurrenciesState) {                    return SafeArea(                      child: Padding(                        padding: const EdgeInsets.only(top: 60.0),                        child: Stack(                          children: [                            ListView.builder(                                physics: const BouncingScrollPhysics(),                                itemCount: state.data.length,                                itemBuilder: (context, index) {                                  return currencyItem(state.data[index],                                      _currentDate, selectedLang, () {                                    _controllerUz.text =                                        state.data[index].rate ?? '';                                    showModalBottomSheet(                                        isScrollControlled: true,                                        context: context,                                        builder: (context) {                                          return Padding(                                            padding: EdgeInsets.only(                                                bottom: MediaQuery.of(context)                                                    .viewInsets                                                    .bottom),                                            child: SizedBox(                                              height: 270,                                              width: MediaQuery.of(context)                                                  .size                                                  .width,                                              child: Column(                                                children: [                                                  const SizedBox(height: 10),                                                  Container(                                                    height: 8,                                                    width: 40,                                                    decoration: const BoxDecoration(                                                        color: Colors.grey,                                                        borderRadius:                                                            BorderRadius.all(                                                                Radius.circular(                                                                    20))),                                                  ),                                                  const SizedBox(height: 30),                                                  Text(                                                    selectedLang == 'uz'                                                        ? state.data[index]                                                                .ccyNmUZ ??                                                            ''                                                        : selectedLang == 'ru'                                                            ? state.data[index]                                                                    .ccyNmRU ??                                                                ''                                                            : selectedLang ==                                                                    'en'                                                                ? state                                                                        .data[                                                                            index]                                                                        .ccyNmEN ??                                                                    ''                                                                : state                                                                        .data[                                                                            index]                                                                        .ccyNmUZC ??                                                                    '',                                                    style: const TextStyle(                                                        fontWeight:                                                            FontWeight.w700,                                                        color: Colors.black,                                                        fontSize: 18),                                                  ),                                                  Padding(                                                    padding: const EdgeInsets                                                        .symmetric(                                                        horizontal: 10.0),                                                    child: TextField(                                                      keyboardType:                                                          TextInputType.number,                                                      controller:                                                          changeCurrency == true                                                              ? _controllerUz                                                              : _controllerOther,                                                      onChanged: (text) {                                                        if (changeCurrency ==                                                            true) {                                                          String uzsAmount =                                                              _controllerUz                                                                  .text;                                                          double usdToUzsRate =                                                              double.parse(state                                                                      .data[                                                                          index]                                                                      .rate ??                                                                  '1');                                                          String usdEquivalent =                                                              convertUzsToUsd(                                                                  uzsAmount,                                                                  usdToUzsRate);                                                          _controllerOther                                                                  .text =                                                              usdEquivalent;                                                        } else {                                                          String usdAmount =                                                              _controllerOther                                                                  .text;                                                          double usdToUzsRate =                                                              double.parse(state                                                                      .data[                                                                          index]                                                                      .rate ??                                                                  '1');                                                          String uzsEquivalent =                                                              convertOtherToUzs(                                                                  usdAmount,                                                                  usdToUzsRate);                                                          _controllerUz.text =                                                              uzsEquivalent;                                                        }                                                      },                                                      decoration:                                                          InputDecoration(                                                        border:                                                            const OutlineInputBorder(),                                                        labelText:                                                            changeCurrency ==                                                                    true                                                                ? 'UZS'                                                                : state                                                                        .data[                                                                            index]                                                                        .ccy ??                                                                    '',                                                      ),                                                    ),                                                  ),                                                  const SizedBox(height: 5),                                                  Padding(                                                    padding: const EdgeInsets                                                        .symmetric(                                                        horizontal: 10.0),                                                    child: TextField(                                                      readOnly: true,                                                      controller:                                                          changeCurrency == true                                                              ? _controllerOther                                                              : _controllerUz,                                                      decoration: InputDecoration(                                                          border:                                                              const OutlineInputBorder(),                                                          label: changeCurrency ==                                                                  true                                                              ? Text(state                                                                      .data[                                                                          index]                                                                      .ccy ??                                                                  '')                                                              : const Text(                                                                  'UZS')),                                                    ),                                                  ),                                                  const SizedBox(height: 5),                                                  InkWell(                                                    onTap: () {                                                      setState(() {                                                        changeCurrency =                                                            !changeCurrency;                                                        Navigator.pop(context);                                                        showModalBottomSheet(                                                            isScrollControlled: true,                                                            context: context,                                                            builder: (context) {                                                              return Padding(                                                                padding: EdgeInsets.only(                                                                    bottom: MediaQuery.of(context)                                                                        .viewInsets                                                                        .bottom),                                                                child: SizedBox(                                                                  height: 270,                                                                  width: MediaQuery.of(context)                                                                      .size                                                                      .width,                                                                  child: Column(                                                                    children: [                                                                      const SizedBox(height: 10),                                                                      Container(                                                                        height: 8,                                                                        width: 40,                                                                        decoration: const BoxDecoration(                                                                            color: Colors.grey,                                                                            borderRadius:                                                                            BorderRadius.all(                                                                                Radius.circular(                                                                                    20))),                                                                      ),                                                                      const SizedBox(height: 30),                                                                      Text(                                                                        selectedLang == 'uz'                                                                            ? state.data[index]                                                                            .ccyNmUZ ??                                                                            ''                                                                            : selectedLang == 'ru'                                                                            ? state.data[index]                                                                            .ccyNmRU ??                                                                            ''                                                                            : selectedLang ==                                                                            'en'                                                                            ? state                                                                            .data[                                                                        index]                                                                            .ccyNmEN ??                                                                            ''                                                                            : state                                                                            .data[                                                                        index]                                                                            .ccyNmUZC ??                                                                            '',                                                                        style: const TextStyle(                                                                            fontWeight:                                                                            FontWeight.w700,                                                                            color: Colors.black,                                                                            fontSize: 18),                                                                      ),                                                                      Padding(                                                                        padding: const EdgeInsets                                                                            .symmetric(                                                                            horizontal: 10.0),                                                                        child: TextField(                                                                          keyboardType:                                                                          TextInputType.number,                                                                          controller:                                                                          changeCurrency == true                                                                              ? _controllerUz                                                                              : _controllerOther,                                                                          onChanged: (text) {                                                                            if (changeCurrency ==                                                                                true) {                                                                              String uzsAmount =                                                                                  _controllerUz                                                                                      .text;                                                                              double usdToUzsRate =                                                                              double.parse(state                                                                                  .data[                                                                              index]                                                                                  .rate ??                                                                                  '1');                                                                              String usdEquivalent =                                                                              convertUzsToUsd(                                                                                  uzsAmount,                                                                                  usdToUzsRate);                                                                              _controllerOther                                                                                  .text =                                                                                  usdEquivalent;                                                                            } else {                                                                              String usdAmount =                                                                                  _controllerOther                                                                                      .text;                                                                              double usdToUzsRate =                                                                              double.parse(state                                                                                  .data[                                                                              index]                                                                                  .rate ??                                                                                  '1');                                                                              String uzsEquivalent =                                                                              convertOtherToUzs(                                                                                  usdAmount,                                                                                  usdToUzsRate);                                                                              _controllerUz.text =                                                                                  uzsEquivalent;                                                                            }                                                                          },                                                                          decoration:                                                                          InputDecoration(                                                                            border:                                                                            const OutlineInputBorder(),                                                                            labelText:                                                                            changeCurrency ==                                                                                true                                                                                ? 'UZS'                                                                                : state                                                                                .data[                                                                            index]                                                                                .ccy ??                                                                                '',                                                                          ),                                                                        ),                                                                      ),                                                                      const SizedBox(height: 5),                                                                      Padding(                                                                        padding: const EdgeInsets                                                                            .symmetric(                                                                            horizontal: 10.0),                                                                        child: TextField(                                                                          readOnly: true,                                                                          controller:                                                                          changeCurrency == true                                                                              ? _controllerOther                                                                              : _controllerUz,                                                                          decoration: InputDecoration(                                                                              border:                                                                              const OutlineInputBorder(),                                                                              label: changeCurrency ==                                                                                  true                                                                                  ? Text(state                                                                                  .data[                                                                              index]                                                                                  .ccy ??                                                                                  '')                                                                                  : const Text(                                                                                  'UZS')),                                                                        ),                                                                      ),                                                                      const SizedBox(height: 5),                                                                      InkWell(                                                                        onTap: () {                                                                          setState(() {                                                                            changeCurrency =                                                                            !changeCurrency;                                                                            Navigator.pop(context);                                                                          });                                                                        },                                                                        child: Container(                                                                          height: 40,                                                                          width: 40,                                                                          decoration: const BoxDecoration(                                                                              color: Colors.grey,                                                                              borderRadius:                                                                              BorderRadius.all(                                                                                  Radius                                                                                      .circular(                                                                                      5))),                                                                          child: const Icon(                                                                              Icons.multiple_stop,                                                                              color: Colors.white),                                                                        ),                                                                      )                                                                    ],                                                                  ),                                                                ),                                                              );                                                            });                                                      });                                                    },                                                    child: Container(                                                      height: 40,                                                      width: 40,                                                      decoration: const BoxDecoration(                                                          color: Colors.grey,                                                          borderRadius:                                                              BorderRadius.all(                                                                  Radius                                                                      .circular(                                                                          5))),                                                      child: const Icon(                                                          Icons.multiple_stop,                                                          color: Colors.white),                                                    ),                                                  )                                                ],                                              ),                                            ),                                          );                                        });                                  });                                })                          ],                        ),                      ),                    );                  } else {                    return const Placeholder();                  }                },              ),            ],          ),        ),      ),    );  }  String convertCurrency(String input, double rate1, double rate2) {    if (input.isEmpty) {      return "0.00";    } else {      double amount = double.tryParse(input) ?? 0.0;      double convertedAmount = (amount * rate1) / rate2;      return convertedAmount.toStringAsFixed(2);    }  }  String convertUzsToUsd(String uzsAmount, double usdToUzsRate) {    return convertCurrency(uzsAmount, 1, usdToUzsRate);  }  String convertOtherToUzs(String otherAmount, double usdToUzsRate) {    return convertCurrency(otherAmount, 1, 1 / usdToUzsRate);  }  Color determineTextColor(String? diff) {    if (diff != null && diff.startsWith('-')) {      return Colors.red;    } else {      return Colors.green;    }  }  Future<void> _selectDate() async {    DateTime? initialDateTime = DateTime.parse(_currentDate);    DateTime? picked = await showDatePicker(        initialDate: initialDateTime,        context: context,        firstDate: DateTime(2000),        lastDate: DateTime(2025));    if (picked != null) {      setState(() {        _currentDate = picked.toString().split(" ")[0];        _bloc.add(GetAllCurrenciesEvent(selectedLang, _currentDate));      });    }  }  String determineText(String? diff) {    if (diff != null && diff.startsWith('-')) {      return "";    } else {      return "+";    }  }  String extractDigitsAndDots(String input) {    String digitsAndDots = input.replaceAll(RegExp(r'[^0-9]'), '');    digitsAndDots =        '${digitsAndDots.substring(0, 2)}.${digitsAndDots.substring(2)}';    digitsAndDots =        '${digitsAndDots.substring(0, 5)}.${digitsAndDots.substring(5)}';    return digitsAndDots;  }}